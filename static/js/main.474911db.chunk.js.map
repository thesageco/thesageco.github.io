{"version":3,"sources":["assets/icons/down-arrow-2.svg","assets/icons/facebook.svg","assets/icons/twitter.svg","assets/icons/instagram.svg","history.tsx","components/dropdown/index.tsx","components/navbar/index.tsx","components/hamburger/index.tsx","App.tsx","pages/home/index.tsx","components/footer/index.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","createBrowserHistory","Dropdown","props","useState","state","open","setOpen","activeIndex","setActiveIndex","dispatch","useContext","LanguageSetStore","toggleOpen","className","onClick","options","alt","src","down","map","lang","i","e","preventDefault","action","stopPropagation","handleClick","key","Navbar","active","setActive","nav","window","location","pathname","to","Hamburger","width","React","createContext","LanguageStore","languageReducer","type","App","useReducer","history","Provider","value","path","title","setTitle","useEffect","info","information","Home","href","target","rel","twitter","facebook","instagram","listen","scrollTo","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.474911db.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/down-arrow-2.bd4e509e.svg\";","module.exports = __webpack_public_path__ + \"static/media/facebook.6494aad0.svg\";","module.exports = __webpack_public_path__ + \"static/media/twitter.9546889d.svg\";","module.exports = __webpack_public_path__ + \"static/media/instagram.99e3e6c8.svg\";","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();","import React, { useState, useContext, MouseEvent } from 'react';\nimport './index.scss';\nimport { LanguageSetStore } from '../../App'\nimport down from '../../assets/icons/down-arrow-2.svg'\n\ninterface DropdownProp {\n  options: String[];\n}\n\nexport default function Dropdown(props: DropdownProp) {\n  const [state, setState] = useState(props);\n  const [open, setOpen] = useState(false);\n  const [activeIndex, setActiveIndex] = useState(0);\n  const dispatch = useContext(LanguageSetStore);\n  \n  function toggleOpen() {\n    setOpen(!open);\n  }\n  \n  function handleClick(e: MouseEvent, i: number, lang: String) {\n    e.preventDefault()\n    // @ts-ignore\n    dispatch({action: 'update', lang: lang});\n    setActiveIndex(i);\n    toggleOpen();\n    e.stopPropagation();\n  }\n  \n  return (\n    <div className=\"dd-wrapper\">\n      <div className=\"dd-header\">\n        <div className=\"dd-header-title\" onClick={toggleOpen}>\n          <span>{state.options[activeIndex]}</span>\n          <img alt=\"down arrow\" src={down} className={`${open?\"up\":\"down\"}`}/>\n        </div>\n        \n      </div>\n      <ul className={`dd-list ${open?\"show\":\"hide\"}`}>\n        {state.options.map((lang, i) => {\n          return <li className={`dd-list-item ${activeIndex === i?\"selected\":\"\"}`} onClick={(e) => handleClick(e, i, lang)} key={i}>{lang}</li>\n        })}\n      </ul>\n    </div>\n  );\n\n};\n","import React, { useState } from 'react';\nimport {Link} from 'react-router-dom';\nimport './index.scss';\nimport Dropdown from '../dropdown';\n\nfunction Navbar() {\n  const [active, setActive] = useState(0);\n  \n  const nav:any = {\n    \"/about\": 1,\n    \"/media\": 2,\n    \"/events\": 3,\n    \"/contact\":4\n  }\n  \n  if(active !== nav[window.location.pathname]){\n    setActive(nav[window.location.pathname])\n  }\n  \n  return (\n    <div className=\"navbar\">\n      <nav className=\"navbar container\">\n        <div className=\"left\">\n          <Link to=\"/\" onClick={()=>setActive(0)}>Template</Link>\n        </div>\n        <div className=\"right\">\n          <Link className={active === 1?\"active\":\"\"} to=\"/about\" onClick={()=>setActive(1)}>About</Link>\n          <Link className={active === 2?\"active\":\"\"} to=\"/media\" onClick={()=>setActive(2)}>Media</Link>\n          <Link className={active === 3?\"active\":\"\"} to=\"/events\" onClick={()=>setActive(3)}>Events</Link>\n          <Link className={active === 4?\"active\":\"\"} to=\"/contact\" onClick={()=>setActive(4)}>Contact</Link>\n          {Dropdown({\n            options: [\"EN\", \"FR\", \"SP\"]\n          })}\n        </div>\n      </nav>\n    </div>\n  );\n\n};\n\nexport default Navbar;\n\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport './index.scss';\nimport Dropdown from '../dropdown';\nimport { slide as Menu } from 'react-burger-menu'\n\n\nfunction Hamburger() {  \n  return (\n    <div className=\"burger\">\n      <Menu width={ '60%' }>\n        <Link className=\"menu-item\" to=\"/about\">About</Link>\n        <Link className=\"menu-item\" to=\"/media\">Media</Link>\n        <Link className=\"menu-item\" to=\"/events\">Events</Link>\n        <Link className=\"menu-item\" to=\"/contact\">Contact</Link>\n        <Link className=\"menu-item\" to=\"#!\">\n          {Dropdown({\n            options: [\"EN\", \"FR\", \"SP\"]\n          })}\n        </Link>\n      </Menu>\n    </div>\n  );\n\n};\n\nexport default Hamburger;","import React, { useReducer, useEffect, useState } from 'react';\nimport './App.scss';\n\nimport {\n  Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nimport history from './history';\n\nimport Navbar from './components/navbar';\nimport Hamburger from './components/hamburger';\nimport Footer from './components/footer';\n\nimport Home from './pages/home';\n\nconst LanguageSetStore = React.createContext({});\nconst LanguageStore = React.createContext({});\n\nfunction languageReducer(\n  state: {lang: string}, \n  action: {type: string, lang: string}\n) {\n  switch (action.type) {\n    case 'update':\n      return {lang: action.lang};\n    default:\n      return {lang: action.lang}\n  }\n}\n\nhistory.listen((location, action) => {\n    window.scrollTo(0, 0)\n})\n\nexport default function App() {\n  let [state, dispatch] = useReducer(languageReducer, {lang: 'EN'});\n\n  return (\n    <div className=\"app\">\n      <Router history={history}>\n        <LanguageStore.Provider value={state.lang}>\n          <LanguageSetStore.Provider value={dispatch}>\n            <Navbar />\n            <Hamburger />\n          </LanguageSetStore.Provider>\n              <Switch>\n                <Route path=\"/\">\n                  {Home({lang: state.lang})}\n                </Route>\n              </Switch>\n          {Footer()}\n        </LanguageStore.Provider>\n      </Router>\n    </div>\n  );\n}\n\nexport {LanguageSetStore, LanguageStore, App};\n","import React, { useEffect, useState } from 'react';\nimport './index.scss';\n\ninterface HomeProp {\n  lang: String;\n}\n\nfunction information(lang: String){\n  switch(lang){\n    case 'EN': \n       return [\"EN2\"];\n    case 'FR': \n      return [\"FR2\"];\n    case 'SP': \n      return [\"SP2\"]\n    default: \n      return [\"\", \"\"];\n  }\n}\n\nexport default function Home(props: HomeProp) {\n  const [title, setTitle] = useState(\"\");\n  \n  useEffect(() => {\n    let info = information(props.lang);\n    setTitle(info[0]);\n  }, [props.lang]);\n\n  return (\n  <div className=\"home\">\n    Home! {title}\n  </div>)\n}","import React from 'react';\nimport './index.scss';\nimport facebook from '../../assets/icons/facebook.svg';\nimport twitter from '../../assets/icons/twitter.svg';\nimport instagram from '../../assets/icons/instagram.svg';\n\nexport default function Footer() {\n  return (\n    <div className=\"footer\">\n      <footer className=\"footer-content\">\n        <a href=\"#!\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <img src={twitter} alt=\"twitter logo\" />\n        </a>\n        <a href=\"#!\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <img src={facebook} alt=\"facebook logo\" />\n        </a>\n        <a href=\"#!\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <img src={instagram} alt=\"instagram logo\" />\n        </a>\n      </footer>\n      <div>\n        <p className=\"SageCo\">Website by <a href=\"https://thesage.co/\" target=\"_blank\" rel=\"noopener noreferrer\">SageCo</a></p>\n      </div>\n    </div>\n  );\n};\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}