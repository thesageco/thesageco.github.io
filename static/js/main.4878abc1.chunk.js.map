{"version":3,"sources":["assets/icons/right-arrow.svg","assets/logo/sage-full.svg","assets/logo/sageco.svg","assets/logo/sage-icon.svg","assets/project/fun.svg","assets/icons/lightbulb.svg","assets/icons/telescope.svg","assets/icons/palette.svg","assets/icons/laptop.svg","assets/icons/peace.svg","assets/process/idea.png","assets/process/research.png","assets/process/design.png","assets/process/building.png","assets/process/peace.png","assets/about/who-we-are.svg","assets/about/product_iteration.svg","assets/team/emile.jpg","assets/team/aditya.jpeg","assets/404/lost.svg","components/scroll-to-top/index.tsx","components/button/index.tsx","components/navbar/index.tsx","components/hamburger/index.tsx","components/contact/index.tsx","components/blurb/index.tsx","components/process-card/index.tsx","components/banner-text/index.tsx","App.tsx","pages/project/index.tsx","pages/about/index.tsx","pages/home/index.tsx","pages/404/index.tsx","components/small-footer/index.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","ScrollToTop","pathname","useLocation","useEffect","window","scrollTo","ButtonType","Button","props","to","href","className","type","text","Navbar","useState","active","setActive","nav","location","White","src","right_arrow","sage_icon","alt","onClick","logo","Hamburger","width","Contact","email","setEmail","name","setName","message","setMessage","submitted","setSubmitted","clicked","setClicked","handleSubmit","e","preventDefault","setTimeout","submissionCallback","fullForm","fun","id","onSubmit","value","onChange","target","placeholder","required","disabled","Blurb","ProcessCard","size","shadow","direction","icon","image_alt","header","subtext","image","BannerType","BannerText","GenZ","GoodCompany","OurProcess","WhoWeAre","TheTeam","LetsChat","TalkSoon","Lost","React","createContext","App","basename","path","Project","who_we_are","product_iteration","aditya","emile","exact","lightbulb","idea","telescope","research","palette","design","laptop","building","peace","peace2","lost","sage_full","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.4878abc1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/right-arrow.3003de29.svg\";","module.exports = __webpack_public_path__ + \"static/media/sage-full.eb699930.svg\";","module.exports = __webpack_public_path__ + \"static/media/sageco.1ad75bdb.svg\";","module.exports = __webpack_public_path__ + \"static/media/sage-icon.dbe66203.svg\";","module.exports = __webpack_public_path__ + \"static/media/fun.46ed87a6.svg\";","module.exports = __webpack_public_path__ + \"static/media/lightbulb.e280f39e.svg\";","module.exports = __webpack_public_path__ + \"static/media/telescope.7d66cd06.svg\";","module.exports = __webpack_public_path__ + \"static/media/palette.d58db985.svg\";","module.exports = __webpack_public_path__ + \"static/media/laptop.8f3b30dc.svg\";","module.exports = __webpack_public_path__ + \"static/media/peace.554251f6.svg\";","module.exports = __webpack_public_path__ + \"static/media/idea.d55b2738.png\";","module.exports = __webpack_public_path__ + \"static/media/research.57eb7a1b.png\";","module.exports = __webpack_public_path__ + \"static/media/design.3f0452c2.png\";","module.exports = __webpack_public_path__ + \"static/media/building.a1a2a998.png\";","module.exports = __webpack_public_path__ + \"static/media/peace.f745d557.png\";","module.exports = __webpack_public_path__ + \"static/media/who-we-are.c36f38fc.svg\";","module.exports = __webpack_public_path__ + \"static/media/product_iteration.2953d485.svg\";","module.exports = __webpack_public_path__ + \"static/media/emile.427e7b9f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/aditya.b18c1896.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/lost.708fbada.svg\";","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport './index.scss';\n\nenum ButtonType {\n  White=\"white\"\n}\n\ninterface ButtonProp {\n  text: JSX.Element | string;\n  href: string;\n  type: string;\n}\n\nexport default function Button(props: ButtonProp) {\n  return (\n    <Link to={props.href} className={`button ${props.type}`}>\n      {props.text}\n    </Link>\n  );\n\n};\n\nexport {ButtonType, Button};","import React, { useState } from 'react';\nimport {Link} from 'react-router-dom';\nimport {Button, ButtonType} from '../button';\nimport logo from '../../assets/logo/sageco.svg';\nimport right_arrow from '../../assets/icons/right-arrow.svg';\nimport sage_icon from '../../assets/logo/sage-icon.svg';\n\nimport './index.scss';\n// import Dropdown from '../dropdown';\n\ninterface NavbarProps {\n  type?: number;\n}\n\nfunction Navbar(props: NavbarProps) {\n  const {type = 1} = props;\n  const [active, setActive] = useState(0);\n  \n  const nav:any = {\n    \"/work\": 0,\n    \"/about\": 1,\n  }\n  \n  if(active !== nav[window.location.pathname]){\n    setActive(nav[window.location.pathname])\n  }\n  if(type !== 1){\n    return (\n      <div className=\"navbar-back\">\n        <nav className=\"container\">\n          {Button({type: ButtonType.White, href: \"/\", text:<span><img src={right_arrow} />Return</span>})}\n          <img className=\"logo\" src={sage_icon} alt=\"sage icon\"/>\n        </nav>\n      </div>\n    )\n    \n  }\n  \n  return (\n    <div className=\"navbar\">\n      <nav className=\"container\">\n        <div className=\"left\">\n          <Link to=\"/\" onClick={()=>setActive(0)}>\n            <img src={logo} alt=\"sage logo\"/>\n          </Link>\n          <Link className={`hide-on-mobile ${active === 0?\"active\":\"\"}` } to=\"/work\" onClick={()=>setActive(0)}>Our Work</Link>\n          <Link className={`hide-on-mobile ${active === 1?\"active\":\"\"}` } to=\"/about\" onClick={()=>setActive(1)}>About Us</Link>\n          {/*\n            Dropdown({\n                className: \"hide-on-mobile\",\n                options: \n                [{\n                  header: \"Our Process\",\n                  children: [\"How we work\", \"FAQs\"],\n                  link: [\"1\", \"2\"],\n                }, {\n                  header: \"Information\",\n                  children: [\"Our Team\", \"Manifesto\"],\n                  link: [\"1\", \"2\"],\n                }]\n            })\n            */\n          }\n        </div>\n        <div className=\"right\">\n          <Link className={active === 2?\"active\":\"\"} to=\"/project\" onClick={()=>setActive(2)}>Start a Project</Link>\n        </div>\n      </nav>\n    </div>\n  );\n\n};\n\nexport default Navbar;\n\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport './index.scss';\n// import Dropdown from '../dropdown';\nimport { slide as Menu } from 'react-burger-menu'\n\n\nfunction Hamburger() {  \n  return (\n    <div className=\"burger\">\n      <Menu width={ '60%' }>\n        <div className=\"large-height\">\n          <div className=\"top\"> \n            <Link className=\"menu-item\" to=\"/work\">Our Work</Link>\n            <Link className=\"menu-item\" to=\"/about\">About Us</Link>\n          </div>\n          {\n            /*\n            Dropdown({\n                options: \n                [{\n                  header: \"Our Process\",\n                  children: [\"How we work\", \"FAQs\"],\n                  link: [\"1\", \"2\"],\n                }, {\n                  header: \"Information\",\n                  children: [\"Our Team\", \"Manifesto\"],\n                  link: [\"1\", \"2\"],\n                }]\n            })*/\n          }\n          <div className=\"bottom\">\n            <Link className=\"menu-item\" to=\"/project\">Start a Project</Link>\n          </div>\n        </div>\n      </Menu>\n    </div>\n  );\n\n};\n\nexport default Hamburger;","import React, { useState, FormEvent } from 'react';\nimport './index.scss';\nimport fun from '../../assets/project/fun.svg'\nimport right_arrow from '../../assets/icons/right-arrow.svg';\n\ninterface ContactProps {\n  fullForm?: boolean;\n  submissionCallback?: (e: boolean) => void;\n}\nexport default function Contact(props: ContactProps) {\n  const [email, setEmail] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [submitted, setSubmitted] = useState(false);\n  const [clicked, setClicked] = useState(false);\n  \n  const toggleSubmit = () => {\n    setSubmitted(true);\n    if(props.submissionCallback){\n      props.submissionCallback(true);\n    }\n  }\n\n  const handleSubmit = (e: FormEvent) => {\n    e.preventDefault();\n    setClicked(true);\n    setTimeout(() => {\n      toggleSubmit();\n    }, 3000);\n  }\n  \n  if(props.fullForm && submitted) {\n    return (\n      <div className=\"contact-us\">\n        <img className=\"fun\" src={fun} alt=\"having-fun\"/>\n      </div>\n    )\n  }\n  if(props.fullForm) {\n    return (\n      <div className=\"contact-us\">\n        <form className=\"full-form\" id=\"gform\" onSubmit={handleSubmit}>\n          <div className=\"name-email\">\n            <input\n              name=\"name\"\n              type=\"name\"\n              value={name}\n              onChange={e => setName(e.target.value)}\n              placeholder=\"Name\"\n              required\n              disabled={submitted}\n            />\n            <input\n              name=\"email\"\n              type=\"email\"\n              value={email}\n              onChange={e => setEmail(e.target.value)}\n              placeholder=\"Your email\"\n              required\n              disabled={submitted}\n            />\n          </div>\n          <div className=\"message\">\n            <textarea\n              name=\"message\"\n              value={message}\n              onChange={e => setMessage(e.target.value)}\n              placeholder=\"Your message &#10;Pro tip -- touch on these things: &#10;‣ Your product &#10;‣ Your timeline &#10;‣ Your location &#10;‣ Where you heard about us\"\n              required\n              disabled={submitted}\n            />\n          </div>\n          <div className=\"send\">\n            <p className=\"apply\">Are you a student looking for work? <a href=\"#!\">Apply Here</a></p>\n            <button type=\"submit\" disabled={submitted}>{clicked ? (submitted?\"Submitted!\":<div className=\"loader\"></div>):<span>Send Message<img src={right_arrow} alt=\"submit arrow\"/></span>}</button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n  return (\n    <div className=\"contact-us\">\n      <form id=\"gform\" onSubmit={handleSubmit}>\n        <div className=\"name-email\">\n          <input\n            name=\"email\"\n            type=\"email\"\n            value={email}\n            onChange={e => setEmail(e.target.value)}\n            placeholder=\"Your email address\"\n            required\n            disabled={submitted}\n          />\n          <div className=\"send\">\n            <button type=\"submit\" disabled={submitted}>{clicked ? (submitted?\"Submitted!\":<div className=\"loader\"></div>):\"Contact Us\"}</button>\n          </div>\n        </div>\n      </form>\n      <p className=\"apply\">Are you a student looking for work? <a href=\"#!\">Apply Here</a></p>\n    </div>\n  );\n\n};\n","import React from 'react';\nimport './index.scss';\n\ninterface BlurbProp {\n  name: String;\n  text: String; \n}\nexport default function Blurb(props: BlurbProp) {\n  \n  return (\n    <div className=\"blurb\">\n      <p>{props.name}</p>\n      <p>{props.text}</p>\n    </div>\n  );\n\n};\n","import React, {ReactNode} from 'react';\nimport './index.scss';\n\ninterface ProcessCardProp {\n  header: String;\n  subtext: ReactNode;\n  icon?: string;\n  image: string;\n  image_alt: string;\n  size?: 'normal' | 'large';\n  shadow?: 'normal' | 'none';\n  direction?: 'left' | 'right';\n}\nexport default function ProcessCard(props: ProcessCardProp) {\n  const {size = 'normal', shadow = 'normal'} = props;\n  return (\n    <div className={`process-card ${props.direction ? \"right\" : \"left\"}`}>\n      <div className=\"process-text\">\n        {props.icon ? <img src={props.icon} alt={props.image_alt}/> : <></>}\n        <p className=\"header\">{props.header}</p>\n        <div className=\"subtext\">{props.subtext}</div>\n      </div>\n      <div className={`process-img ${size}`}>\n        <img className={shadow} src={props.image} alt={props.image_alt}/>\n      </div>\n    </div>\n  );\n\n};\n\n","import React from 'react';\nimport './index.scss';\n\nenum BannerType {\n  GenZ = 1,\n  GoodCompany = 2,\n  OurProcess = 3,\n  WhoWeAre = 4,\n  TheTeam = 5,\n  LetsChat = 6,\n  TalkSoon,\n  Lost,\n}\n\ninterface BannerTextProp {\n  type: BannerType\n}\nexport default function BannerText(props: BannerTextProp) {\n  let header=\"\", text=<></>, className = \"\";\n  switch(props.type){\n    case BannerType.GenZ: \n      className=\"generationZ\";\n      header= \"Generation Z is in the house\";\n      text= <div className={className}><p>Build your next website or app with our team of student <span id=\"i1\">designers</span>, <span id=\"i2\">developers</span>, and <span id=\"i3\">marketing&nbsp;specialists</span>.</p></div>;\n      break;\n    case BannerType.GoodCompany: \n      className=\"good-company\";\n      header= \"You're in good company\";\n      text= <div className={className}><p>Our team has a combined eight years of experience building websites, apps, and software for some of the world’s best companies.</p></div>;\n      break;\n    case BannerType.OurProcess: \n      className=\"our-process\";\n      header= \"Our Process\";\n      text= <div className={className}><p>We’re avid believers in design-thinking. That means applying a time-tested iterative process to creating digital solutions that work.</p></div>;\n      break;\n    case BannerType.WhoWeAre: \n      className=\"who-we-are\";\n      header= \"Who we are\";\n      text= <div className={className}><p>We’re one of the few design agencies in the world who will take your product from a napkin sketch to launch.</p></div>;\n      break;\n    case BannerType.TheTeam: \n      className=\"team\";\n      header= \"The Team\";\n      text= <div className={className}><p>We have worked together on a multitude of projects.</p></div>;\n      break;\n    case BannerType.LetsChat: \n      className=\"chat\";\n      header= \"Let's chat\";\n      text= <div className={className}><p>Can we help? We’re always looking for new and exciting projects to work on!</p></div>;\n      break;\n    case BannerType.TalkSoon: \n      className=\"talk-soon\";\n      header= \"Talk Soon\";\n      text= <div className={className}><p>Thanks for expressing your interest in working with us! We’ll be back in touch within the next day.</p></div>;\n      break;\n    case BannerType.Lost: \n      className=\"lost\";\n      header= \"Hmm, seems like you’re lost\";\n      text= <div className={className}><p>This page may have been deleted, or simply hasn’t been created yet!</p></div>;\n      break;\n  }\n  \n  return (\n    <div className={`banner-text ${className}`}>\n      <p className=\"header\">{header}</p>\n      {text}\n    </div>\n  );\n\n};\n\nexport {BannerType, BannerText};","import React from 'react';\nimport './App.scss';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\n\nimport Navbar from './components/navbar';\nimport Hamburger from './components/hamburger';\nimport Footer from './components/small-footer';\nimport ScrollToTop from './components/scroll-to-top';\n\nimport Home from './pages/home';\nimport About from './pages/about';\nimport Project from './pages/project';\nimport FourOhFour from './pages/404';\n\nconst LanguageSetStore = React.createContext({});\nconst LanguageStore = React.createContext({});\n\nexport default function App() {\n  return (\n    <div className=\"app\">\n      <Router basename=\"/\">\n        <ScrollToTop />\n        <Switch>\n          <Route path=\"/project\">\n            {Project()}\n          </Route>\n          <Route path=\"/about\">\n            {About()}\n          </Route>\n          <Route exact path=\"/\">\n            {Home()}\n          </Route>\n          <Route path=\"/\">\n            {FourOhFour()}\n          </Route>\n        </Switch>\n        {Footer()}\n      </Router>\n    </div>\n  );\n}\n\nexport {LanguageSetStore, LanguageStore, App};\n","import React, {useState} from 'react';\nimport './index.scss';\nimport Navbar from '../../components/navbar';\nimport Contact from '../../components/contact';\nimport { BannerType, BannerText } from '../../components/banner-text';\nexport default function Project() {\n  const [submitted, setSubmitted] = useState(false);\n  return (\n    <>\n      {Navbar({type: 0})}\n      <div className=\"project container\">\n        <div className=\"lets-chat\">\n          {BannerText({\n            type: submitted ? BannerType.TalkSoon : BannerType.LetsChat\n          })}\n          <div>\n            {Contact({\n              fullForm: true,\n              submissionCallback: setSubmitted,\n            })}\n          </div>\n        </div>\n      </div>\n    </>\n)\n}","import React from 'react';\nimport './index.scss';\nimport Navbar from '../../components/navbar';\nimport Hamburger from '../../components/hamburger';\nimport Contact from '../../components/contact';\nimport ProcessCard from '../../components/process-card';\nimport { BannerType, BannerText } from '../../components/banner-text';\n\nimport who_we_are from '../../assets/about/who-we-are.svg';\nimport product_iteration from '../../assets/about/product_iteration.svg';\nimport emile from '../../assets/team/emile.jpg';\nimport aditya from '../../assets/team/aditya.jpeg';\n\nexport default function About() {\n\n  return (\n  <>\n    <Navbar />\n    <Hamburger />\n    <div className=\"about container\">\n      <div className=\"who-we-are\">\n        {BannerText({\n          type: BannerType.WhoWeAre\n        })}\n        <div className=\"who-we-are-img sub-container\">\n          <img src={who_we_are} alt=\"who-we-are\"/>\n        </div>\n      </div>\n      <p className=\"combined-experience\">With a combined <span>six years of experience</span> building and launching products ranging from mobile apps to websites and software, the Sage Co team is composed of two University of Waterloo students in Computer Science, and Global Business and Digital Arts.</p>\n      <div className=\"processes\">\n        {ProcessCard({\n          icon: '',\n          header: \"We are experts in\",\n          subtext: <div>\n                        <p>Front-end & Back-end development</p>\n                        <p>Product Design (UX, UI, Research)</p>\n                        <p>Online Marketing</p>\n                        <p>Workflow Optimization</p>\n                  </div>,\n          image: product_iteration,\n          image_alt: \"ggwp\",\n          size: \"large\",\n          shadow: \"none\",\n        })}\n      </div>\n      <div className=\"the-team\" id=\"the-team\">\n        {BannerText({\n          type: BannerType.TheTeam\n        })}\n        <div className=\"pics\">\n          <figure>\n            <img src={aditya} alt=\"aditya\" />\n            <figcaption>Aditya Arora</figcaption>\n          </figure>\n          <figure>\n            <img src={emile} alt=\"emile\" />\n            <figcaption>Emile Patry</figcaption>\n          </figure>\n        </div>\n      </div>\n      <div className=\"companies\">\n        <p>...and have been trusted by some of the best.</p>\n        <div className=\"logos\">\n        </div>\n      </div>\n      <div className=\"hr\"></div>\n      {BannerText({\n        type: BannerType.GenZ\n      })}\n      <div>\n        {Contact({})}\n      </div>\n    </div>\n  </>)\n}","import React from 'react';\nimport './index.scss';\nimport Navbar from '../../components/navbar';\nimport Hamburger from '../../components/hamburger';\nimport Contact from '../../components/contact';\nimport Blurb from '../../components/blurb';\nimport ProcessCard from '../../components/process-card';\nimport {Button, ButtonType} from '../../components/button';\nimport { BannerType, BannerText } from '../../components/banner-text';\nimport lightbulb from '../../assets/icons/lightbulb.svg';\nimport telescope from '../../assets/icons/telescope.svg';\nimport palette from '../../assets/icons/palette.svg';\nimport laptop from '../../assets/icons/laptop.svg';\nimport peace from '../../assets/icons/peace.svg';\n\nimport idea from '../../assets/process/idea.png';\nimport research from '../../assets/process/research.png';\nimport design from '../../assets/process/design.png';\nimport building from '../../assets/process/building.png';\nimport peace2 from '../../assets/process/peace.png';\n\n\nexport default function Home() {\n\n  return (\n  <>\n    <Navbar />\n    <Hamburger />\n    <div className=\"home\">\n      {BannerText({\n        type: BannerType.GenZ\n      })}\n      <div>\n        {Contact({})}\n      </div>\n      <div className=\"blurbs container\">\n        {Blurb({\n          name: \"Antonio Llaca\",\n          text: \"“Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.”\",\n        })}\n        {Blurb({\n          name: \"Lumen Graphics\",\n          text: \"“Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.”\",\n        })}\n        {Blurb({\n          name: \"Ruslan Nikolaev\",\n          text: `“The Sage team quickly delivered on the website when we needed it the most and was great at communicating throughout the development process.”`,\n        })}\n      </div>\n      {BannerText({\n        type: BannerType.GoodCompany\n      })}\n      {Button({\n        text: \"See our work\",\n        href: \"work\",\n        type: ButtonType.White\n      })}\n      <hr/>\n      {BannerText({\n        type: BannerType.OurProcess\n      })}\n      <div className=\"processes container\">\n        {ProcessCard({\n          icon: lightbulb,\n          header: \"Bring us your idea\",\n          subtext: <p><span className=\"underline\">Set up a 30 minute chat</span> with us to discuss what you’d like to do. We will offer professional advice and provide a ballparked proposal - no project is too big or small for us!</p>,\n          image: idea,\n          image_alt: \"ggwp\",\n        })}\n        {ProcessCard({\n          icon: telescope,\n          header: \"We'll do the research\",\n          subtext: <p>To build a skyscraper you must start with the bedrock. We believe in familiarizing ourselves as much as we can with your business needs in order to ensure the end result is the best we can provide.</p>,\n          image: research,\n          image_alt: \"telsecope\",\n          direction: \"left\",\n        })}\n        {ProcessCard({\n          icon: palette,\n          header: \"Design is Everything\",\n          subtext: <p>Looks is an important factor to keep in mind when making your new website. Other than creating beautiful UI’s we also offer services in branding, if that what your project calls for.</p>,\n          image: design,\n          image_alt: \"palette\",\n        })}\n        {ProcessCard({\n          icon: laptop,\n          header: \"Let's get bulding\",\n          subtext: <p>Once we’ve all come to agreements on the design of your new project, we utilize our own in-house tools to code and launch your website. Don’t forget to pick a good domain name!</p>,\n          image: building,\n          image_alt: \"laptop\",\n          direction: \"left\",\n        })}\n        {ProcessCard({\n          icon: peace,\n          header: \"Your peace of mind\",\n          subtext: <p>Once all is well and finished, we’re always here to answer any of your questions. We’re here for you, 24/7.</p>,\n          image: peace2,\n          image_alt: \"peace\",\n        })}\n      </div>\n      {BannerText({\n        type: BannerType.GenZ\n      })}\n      <div className=\"contact-form\">\n        {Contact({})}\n      </div>\n    </div>\n  </>)\n}","import React, {useState} from 'react';\nimport './index.scss';\nimport Navbar from '../../components/navbar';\nimport Contact from '../../components/contact';\nimport { BannerType, BannerText } from '../../components/banner-text';\n\nimport lost from '../../assets/404/lost.svg'\n\nexport default function FourOhFour() {\n  return (\n    <>\n      {Navbar({type: 0})}\n      <div className=\"fourohfour\">\n        {BannerText({\n          type: BannerType.Lost\n        })}\n        <img src={lost} alt=\"lost\"/>\n      </div>\n    </>\n)\n}","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport './index.scss';\n\nimport sage_full from '../../assets/logo/sage-full.svg';\n\nexport default function SmallFooter() {\n  return (\n    <div className=\"footer\">\n      <footer className=\"footer-content\">\n        \n        <div className=\"container\">\n          <div className=\"left\">\n            <img src={sage_full} alt=\"sage icon\"/>\n          </div>\n          <div className=\"right\">\n            <Link to=\"/work\">Our Work</Link>\n            <Link to=\"/terms\">About Us</Link>\n            <a target=\"blank\" href=\"https://www.linkedin.com/company/thesageco/\">Linkedin</a>\n            <a target=\"blank\" href=\"mailto:hello@thesage.co?Subject=Saying Hello!\">Email</a>\n            <a target=\"blank\" href=\"/\">Book a Meeting</a>\n          </div>\n        </div>\n      </footer>\n    </div>\n  );\n};\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}